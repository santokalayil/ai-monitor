[tool.poetry]
name = "ai-monitor"
version = "0.2.0"
description = "AI Monitor Package"
authors = ["Santo K Thomas <santokalayil@gmail.com>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "ai", from = "." }
]
include = ["ai/**/*.py"]
exclude = ["tests/*"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.urls]
"Homepage" = "https://github.com/santokalayil/ai-monitor"
"Bug Tracker" = "https://github.com/santokalayil/ai-monitor/issues"

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=ai"

[tool.coverage.run]
source = ["ai"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
    "conftest.py",
]
