name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry==1.7.1
    
    - name: Set up Poetry configuration
      run: |
        mkdir -p ~/.config/pypoetry
        echo '[virtualenvs]\ncreate = true\nin-project = true' > ~/.config/pypoetry/config.toml
    
    - name: Debug Poetry Version
      run: |
        poetry --version
    
    - name: Debug Python Version
      run: |
        python --version
        which python
    
    - name: Debug Poetry Environment
      run: |
        poetry env info || true
        poetry env list || true
        poetry env use python || true
    
    - name: Debug Poetry Dependencies
      run: |
        poetry show || true
    
    - name: Install dependencies
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Poetry config:"
        poetry config --list
        echo "Attempting to install dependencies..."
        poetry install --no-interaction --verbose
        echo "Installation completed"
    
    - name: Debug Python Path
      run: |
        poetry run python -c "import sys; print('\n'.join(sys.path))"
    
    - name: Debug Package Installation
      run: |
        poetry run pip list
    
    - name: Debug Project Structure
      run: |
        ls -la
        ls -la tests/
    
    - name: Run tests with pytest
      run: |
        poetry run python -m pytest tests/ -v --tb=short || true
        echo "Pytest exit code: $?"
        poetry run python -m pytest tests/ -v --tb=short --pdb
    
    - name: Run type checking
      run: |
        poetry run mypy ai/ 